# Group 1-> conventional method
conv<-c(65, 79, 90, 75, 61, 85, 92, 80, 91, 75)
# Grooup 2-> New method
new<-c(95, 98, 73, 79, 84, 81, 98, 90, 83, 88, 97)
'''
Method 1
'''
n1=length(conv)
n2=length(new)
numBootSamples<-1000
# well save the result of each bootstrap in a vector
means1<-numeric(numBootSamples)
means2<-numeric(numBootSamples)
#we simulate new samples, taking independent observations according to the distribution of probability of the sample
for(i in 1:numBootSamples){
boot1<-sample(conv, n1, replace=T)
boot2<-samuple(new, n2, replace=T)
means1[i]<-mean(boot1)
means2[i]<-mean(boot2)
}
boxplot(means1)
boxplot(means2)
# Group 1-> conventional method
conv<-c(65, 79, 90, 75, 61, 85, 92, 80, 91, 75)
# Grooup 2-> New method
new<-c(95, 98, 73, 79, 84, 81, 98, 90, 83, 88, 97)
'''
Method 1
'''
n1=length(conv)
n2=length(new)
numBootSamples<-10000
# well save the result of each bootstrap in a vector
means1<-numeric(numBootSamples)
means2<-numeric(numBootSamples)
#we simulate new samples, taking independent observations according to the distribution of probability of the sample
for(i in 1:numBootSamples){
boot1<-sample(conv, n1, replace=T)
boot2<-sample(new, n2, replace=T)
means1[i]<-mean(boot1)
means2[i]<-mean(boot2)
}
boxplot(means1)
boxplot(means2)
hist(means1)
hist(means2)
hist(means1)
#95% bootstrap confidence interval for the conventional group
quantile(means1, c(0.025, 0.975))
# we get the mean point
group1Meth1<-(72.8+85.4)/2
group1Meth1
85.4-79.1
72.8-79.1
#95% bootstrap confidence interval for the new group
quantile(means2, c(0.025, 0.975))
# we get  2,5% 97,5%
#         83,00  92,5454
# we get the mean point
group1Meth1<-(83+92.5454)/2
# we get  2,5% 97,5%
#         83,00  92,5454
# we get the mean point
group1Meth2<-(83+92.5454)/2
group1Meth2#79.1
83-87.77
meanDifces<-means2-means1
meanDifces
boxplot(meanDifces)
hist(meanDifces)
# again data is symetricly arranged, nice for method 1
#95% bootstrap confidence interval for the differnece
quantile(meansDifces, c(0.025, 0.975))
# again data is symetricly arranged, nice for method 1
#95% bootstrap confidence interval for the differnece
quantile(meanDifces, c(0.025, 0.975))
# we get  2,5% 97,5%
#         0.8906  16.5818
# we get the mean point
group1Meth2<-(0.8906+0.975)/2
# we get  2,5% 97,5%
#         0.8906  16.5818
# we get the mean point
difcesMeth1<-(0.8906+0.975)/2
difcesMeth1 #87.77
# we get  2,5% 97,5%
#         0.8906  16.5818
# we get the mean point
difcesMeth1<-(0.8906+16.8818)/2
difcesMeth1 #0.9328
8.8862-0.8906
# group1
2*mean(conv)-quantile(means1, c(0.025, 0.975))
# group2
2*mean(new)-quantile(means2, c(0.025, 0.975))
# group difference
2*(mean(conv)-mean(new))-quantile(meanDifces, c(0.025, 0.975))
# group difference
2*(mean(new)-mean(conv))-quantile(meanDifces, c(0.025, 0.975))
numBootSamples<-10000
# well save the result of each bootstrap in a vector
t1<-numeric(numBootSamples)
t2<-numeric(numBootSamples)
#we simulate new samples, taking independent observations according to the distribution of probability of the sample
for(i in 1:numBootSamples){
boot1<-sample(conv, n1, replace=T)
boot2<-sample(new, n2, replace=T)
t1[i]<-(mean(boot1)-mean(conv))/(sqrt(var(conv)/n1))
t2[i]<-(mean(boot2)-mean(new))/(sqrt(var(new)/n2))
}
boxplot(t1)
boxplot(t2)
hist(t1)
hist(t2)
quantile(t1, c(0.025, 0.975))
quantile(t1, c(0.025, 0.975))
mean(conv)+quantile(t1, c(0.025, 0.975))*sqrt(var(conv)/n1)
quantile(t2, c(0.025, 0.975))
mean(new)+quantile(t2, c(0.025, 0.975))*sqrt(var(new)/n2)
t_dif<-numeric(numBootSamples)
#we simulate new samples, taking independent observations according to the distribution of probability of the sample
for(i in 1:numBootSamples){
boot1<-sample(conv, n1, replace=T)
boot2<-sample(new, n2, replace=T)
t1[i]<-(mean(boot1)-mean(conv))/(sqrt(var(conv)/n1))
t2[i]<-(mean(boot2)-mean(new))/(sqrt(var(new)/n2))
t_dif[i]<-(mean(boot2)-mean(boot1) - (mean(new)-mean(conv)))/sqrt((var(conv)+var(new))/(n1+n2))
}
boxplot(t1)
boxplot(t2)
hist(t1)
hist(t2)
hist(t_dif)
quantile(t1, c(0.025, 0.975))
mean(conv)+quantile(t1, c(0.025, 0.975))*sqrt(var(conv)/n1)
quantile(t2, c(0.025, 0.975))
mean(new)+quantile(t2, c(0.025, 0.975))*sqrt(var(new)/n2)
# New group
# New group
#     2,5%    97,5%
mean(new)-mean(conv)+quantile(t_dif, c(0.025, 0.975))*sqrt((var(conv)+var(new))/(n1+n2))
km<-c(37388, 44758, 45833, 30862, 31705, 34010)
price<-c(14636, 14122, 14016, 15590, 15568, 14718)
originalFit<-lm(price~km)
riginalfit
riginalFit
originalFit
originalFit<-summary(lm(price~km))
originalFit$coefficients
originalFit$coefficients[0]
originalFit$coefficients[1]
originalFit$coefficients[2]
originalPred<-originalFit$coefficients[1] + originalFit$coefficients[2]*5000
originalPred
km<-c(37388, 44758, 45833, 30862, 31705, 34010)
price<-c(14636, 14122, 14016, 15590, 15568, 14718)
n<-length(km)
originalFit<-summary(lm(price~km))
# (Intercept)           km
#   1,846e+04   -9,841e-02
originalPred<-originalFit$coefficients[1] + originalFit$coefficients[2]*5000
'''
we seek for the CI of an interpolation on the line, the prediciton of
price given a km=5000
Method 1: The Quantile Method
'''
numBootSamples<-10000
BootsPredictions<-numeric(numBootSamples)
indices<-seq(1,n)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
BootsPredictions[i]<-bootFit$coefficients[1] + 5000*bootFit$coefficients[2]
}
#95% bootstrap confidence interval for the prediciton
quantile(BootsPredictions, c(0.025, 0.975))
# we get  2,5% 97,5%
#         72,8  85,4
# we get the mean point
bootPredM1<-(72.8+85.4)/2
#    2,5%    97,5%
# 16439,99 20008,46
# we get the mean point
bootPredM1<-(16439.99+20008.46)/2
bootPredM1#79.1
bootPredM1-16439.99
# simply refer the Method 1 quantiles to the original prediciton
2*originalPred-quantile(BootssPredictions, c(0.025, 0.975))
# simply refer the Method 1 quantiles to the original prediciton
2*originalPred-quantile(BootsPredictions, c(0.025, 0.975))
#    2,5%    97,5%
# 19492,05 15923,58
# get the mid point
bootPredM2<-(19492.05-15923.58)/2
bootPredM2
#    2,5%    97,5%
# 19492,05 15923,58
# get the mid point
bootPredM2<-(19492.05+15923.58)/2
bootPredM2 # 1784.235
bootPredM2-15923.58
boxplot(BootsPredictions)
hist(BootsPredictions)
originalFit$coefficients
originalFit$residuals
originalFit
originalFit$coefficients
originalFit$sigma
km
km-mean(km)
mean(km)
(km-mean(km))^2
7332^2
sum((km-mean(km))^2)
sdv_originalPred<-originalFit$sigma*sqrt( 1/n +(5000 - mean(km) )^2/(sum( (km-mean(km))^2 )) )
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
stdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
sdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
sdv_originalPred<-originalFit$sigma*sqrt( 1/n +(5000 - mean(km) )^2/(sum( (km-mean(km))^2 )) )
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
sdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
bootFit
bootIndx
km[bootIndx]
price[bootIndx]
sdv_bootSample
sdv_originalPred
t_boots
t_boots<-numeric(numBootSamples)
t_boots
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
sdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
warnings()
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
t_boots
numBootSamples<-1000
sdv_originalPred<-originalFit$sigma*sqrt( 1/n +(5000 - mean(km) )^2/(sum( (km-mean(km))^2 )) )
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
sdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
numBootSamples<-10000
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
sdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
n
indices
sdv_originalPred<-originalFit$sigma*sqrt( 1/n +(5000 - mean(km) )^2/(sum( (km-mean(km))^2 )) )
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
if(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) != 0) {sdv_bootSample<-bootFit$sigma*sqrt(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) )}
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
#         2,5%     97,5%
#   8151,829 43826,281
# we get the mean point
bootPredM3<-(8151.829+43826.281)/2
bootPredM3 # 18224.22
sdv_originalPred<-sqrt(originalFit$sigma*( 1/n +(5000 - mean(km) )^2/(sum( (km-mean(km))^2 )) ))
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
if(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) != 0) {
sdv_bootSample<-sqrt(bootFit$sigma*(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) ))
}
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
t_boots<-numeric(numBootSamples)
for(i in 1:numBootSamples){
bootIndx<-sample(indices, n, replace=T)
bootFit<-summary(lm(price[bootIndx]~km[bootIndx]))
sdv_bootSample<-sqrt(bootFit$sigma*(1/n + (5000 - mean(km[bootIndx]))^2/(sum( (km[bootIndx] - mean(km[bootIndx]))^2 ) ) ))
t_boots[i]<-((bootFit$coefficients[1] + 5000*bootFit$coefficients[2])-originalPred)/sdv_bootSample
}
#95% bootstrap confidence interval for the prediciton
originalPred+quantile(t_boots, c(0.025, 0.975))*sdv_originalPred
#         2,5%     97,5%
#   15152,19 21036,53
# we get the mean point
bootPredM3<-(15152,19+ 21036,53)/2
#         2,5%     97,5%
#   15152,19 21036,53
# we get the mean point
bootPredM3<-(15152.19+ 21036.53)/2
bootPredM3 # 25989.06
bootPredM3-21036.53
originalPred
1-0.05/2
tn_2_0.975<-qt(0.975,n-2)
tn_2_0.975*sdv_originalPred
tn_2_0.975
sdv_originalPred
(t_boots, c(0.025, 0.975))
quantile(t_boots, c(0.025, 0.975))
originalPred
hist(t_boots)
